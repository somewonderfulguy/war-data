/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LangImport } from './routes/$lang'
import { Route as IndexImport } from './routes/index'
import { Route as LangIndexImport } from './routes/$lang.index'
import { Route as LangPerpetuaImport } from './routes/$lang.perpetua'
import { Route as LangLoginImport } from './routes/$lang.login'

// Create/Update Routes

const LangRoute = LangImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LangIndexRoute = LangIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangRoute,
} as any)

const LangPerpetuaRoute = LangPerpetuaImport.update({
  id: '/perpetua',
  path: '/perpetua',
  getParentRoute: () => LangRoute,
} as any)

const LangLoginRoute = LangLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LangRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangImport
      parentRoute: typeof rootRoute
    }
    '/$lang/login': {
      id: '/$lang/login'
      path: '/login'
      fullPath: '/$lang/login'
      preLoaderRoute: typeof LangLoginImport
      parentRoute: typeof LangImport
    }
    '/$lang/perpetua': {
      id: '/$lang/perpetua'
      path: '/perpetua'
      fullPath: '/$lang/perpetua'
      preLoaderRoute: typeof LangPerpetuaImport
      parentRoute: typeof LangImport
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangIndexImport
      parentRoute: typeof LangImport
    }
  }
}

// Create and export the route tree

interface LangRouteChildren {
  LangLoginRoute: typeof LangLoginRoute
  LangPerpetuaRoute: typeof LangPerpetuaRoute
  LangIndexRoute: typeof LangIndexRoute
}

const LangRouteChildren: LangRouteChildren = {
  LangLoginRoute: LangLoginRoute,
  LangPerpetuaRoute: LangPerpetuaRoute,
  LangIndexRoute: LangIndexRoute,
}

const LangRouteWithChildren = LangRoute._addFileChildren(LangRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$lang': typeof LangRouteWithChildren
  '/$lang/login': typeof LangLoginRoute
  '/$lang/perpetua': typeof LangPerpetuaRoute
  '/$lang/': typeof LangIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$lang/login': typeof LangLoginRoute
  '/$lang/perpetua': typeof LangPerpetuaRoute
  '/$lang': typeof LangIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$lang': typeof LangRouteWithChildren
  '/$lang/login': typeof LangLoginRoute
  '/$lang/perpetua': typeof LangPerpetuaRoute
  '/$lang/': typeof LangIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$lang' | '/$lang/login' | '/$lang/perpetua' | '/$lang/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$lang/login' | '/$lang/perpetua' | '/$lang'
  id:
    | '__root__'
    | '/'
    | '/$lang'
    | '/$lang/login'
    | '/$lang/perpetua'
    | '/$lang/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LangRoute: typeof LangRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LangRoute: LangRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$lang"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$lang": {
      "filePath": "$lang.tsx",
      "children": [
        "/$lang/login",
        "/$lang/perpetua",
        "/$lang/"
      ]
    },
    "/$lang/login": {
      "filePath": "$lang.login.tsx",
      "parent": "/$lang"
    },
    "/$lang/perpetua": {
      "filePath": "$lang.perpetua.tsx",
      "parent": "/$lang"
    },
    "/$lang/": {
      "filePath": "$lang.index.tsx",
      "parent": "/$lang"
    }
  }
}
ROUTE_MANIFEST_END */
